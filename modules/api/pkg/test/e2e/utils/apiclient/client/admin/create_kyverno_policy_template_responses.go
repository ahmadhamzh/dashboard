// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"k8c.io/dashboard/v2/pkg/test/e2e/utils/apiclient/models"
)

// CreateKyvernoPolicyTemplateReader is a Reader for the CreateKyvernoPolicyTemplate structure.
type CreateKyvernoPolicyTemplateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateKyvernoPolicyTemplateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateKyvernoPolicyTemplateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateKyvernoPolicyTemplateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateKyvernoPolicyTemplateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateKyvernoPolicyTemplateDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateKyvernoPolicyTemplateOK creates a CreateKyvernoPolicyTemplateOK with default headers values
func NewCreateKyvernoPolicyTemplateOK() *CreateKyvernoPolicyTemplateOK {
	return &CreateKyvernoPolicyTemplateOK{}
}

/*
CreateKyvernoPolicyTemplateOK describes a response with status code 200, with default header values.

EmptyResponse is a empty response
*/
type CreateKyvernoPolicyTemplateOK struct {
}

// IsSuccess returns true when this create kyverno policy template o k response has a 2xx status code
func (o *CreateKyvernoPolicyTemplateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create kyverno policy template o k response has a 3xx status code
func (o *CreateKyvernoPolicyTemplateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create kyverno policy template o k response has a 4xx status code
func (o *CreateKyvernoPolicyTemplateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create kyverno policy template o k response has a 5xx status code
func (o *CreateKyvernoPolicyTemplateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create kyverno policy template o k response a status code equal to that given
func (o *CreateKyvernoPolicyTemplateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create kyverno policy template o k response
func (o *CreateKyvernoPolicyTemplateOK) Code() int {
	return 200
}

func (o *CreateKyvernoPolicyTemplateOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/policytemplate][%d] createKyvernoPolicyTemplateOK", 200)
}

func (o *CreateKyvernoPolicyTemplateOK) String() string {
	return fmt.Sprintf("[PUT /api/v2/policytemplate][%d] createKyvernoPolicyTemplateOK", 200)
}

func (o *CreateKyvernoPolicyTemplateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateKyvernoPolicyTemplateUnauthorized creates a CreateKyvernoPolicyTemplateUnauthorized with default headers values
func NewCreateKyvernoPolicyTemplateUnauthorized() *CreateKyvernoPolicyTemplateUnauthorized {
	return &CreateKyvernoPolicyTemplateUnauthorized{}
}

/*
CreateKyvernoPolicyTemplateUnauthorized describes a response with status code 401, with default header values.

EmptyResponse is a empty response
*/
type CreateKyvernoPolicyTemplateUnauthorized struct {
}

// IsSuccess returns true when this create kyverno policy template unauthorized response has a 2xx status code
func (o *CreateKyvernoPolicyTemplateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create kyverno policy template unauthorized response has a 3xx status code
func (o *CreateKyvernoPolicyTemplateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create kyverno policy template unauthorized response has a 4xx status code
func (o *CreateKyvernoPolicyTemplateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create kyverno policy template unauthorized response has a 5xx status code
func (o *CreateKyvernoPolicyTemplateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create kyverno policy template unauthorized response a status code equal to that given
func (o *CreateKyvernoPolicyTemplateUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create kyverno policy template unauthorized response
func (o *CreateKyvernoPolicyTemplateUnauthorized) Code() int {
	return 401
}

func (o *CreateKyvernoPolicyTemplateUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v2/policytemplate][%d] createKyvernoPolicyTemplateUnauthorized", 401)
}

func (o *CreateKyvernoPolicyTemplateUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v2/policytemplate][%d] createKyvernoPolicyTemplateUnauthorized", 401)
}

func (o *CreateKyvernoPolicyTemplateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateKyvernoPolicyTemplateForbidden creates a CreateKyvernoPolicyTemplateForbidden with default headers values
func NewCreateKyvernoPolicyTemplateForbidden() *CreateKyvernoPolicyTemplateForbidden {
	return &CreateKyvernoPolicyTemplateForbidden{}
}

/*
CreateKyvernoPolicyTemplateForbidden describes a response with status code 403, with default header values.

EmptyResponse is a empty response
*/
type CreateKyvernoPolicyTemplateForbidden struct {
}

// IsSuccess returns true when this create kyverno policy template forbidden response has a 2xx status code
func (o *CreateKyvernoPolicyTemplateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create kyverno policy template forbidden response has a 3xx status code
func (o *CreateKyvernoPolicyTemplateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create kyverno policy template forbidden response has a 4xx status code
func (o *CreateKyvernoPolicyTemplateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create kyverno policy template forbidden response has a 5xx status code
func (o *CreateKyvernoPolicyTemplateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create kyverno policy template forbidden response a status code equal to that given
func (o *CreateKyvernoPolicyTemplateForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create kyverno policy template forbidden response
func (o *CreateKyvernoPolicyTemplateForbidden) Code() int {
	return 403
}

func (o *CreateKyvernoPolicyTemplateForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/policytemplate][%d] createKyvernoPolicyTemplateForbidden", 403)
}

func (o *CreateKyvernoPolicyTemplateForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v2/policytemplate][%d] createKyvernoPolicyTemplateForbidden", 403)
}

func (o *CreateKyvernoPolicyTemplateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateKyvernoPolicyTemplateDefault creates a CreateKyvernoPolicyTemplateDefault with default headers values
func NewCreateKyvernoPolicyTemplateDefault(code int) *CreateKyvernoPolicyTemplateDefault {
	return &CreateKyvernoPolicyTemplateDefault{
		_statusCode: code,
	}
}

/*
CreateKyvernoPolicyTemplateDefault describes a response with status code -1, with default header values.

errorResponse
*/
type CreateKyvernoPolicyTemplateDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create kyverno policy template default response has a 2xx status code
func (o *CreateKyvernoPolicyTemplateDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create kyverno policy template default response has a 3xx status code
func (o *CreateKyvernoPolicyTemplateDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create kyverno policy template default response has a 4xx status code
func (o *CreateKyvernoPolicyTemplateDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create kyverno policy template default response has a 5xx status code
func (o *CreateKyvernoPolicyTemplateDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create kyverno policy template default response a status code equal to that given
func (o *CreateKyvernoPolicyTemplateDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create kyverno policy template default response
func (o *CreateKyvernoPolicyTemplateDefault) Code() int {
	return o._statusCode
}

func (o *CreateKyvernoPolicyTemplateDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /api/v2/policytemplate][%d] createKyvernoPolicyTemplate default %s", o._statusCode, payload)
}

func (o *CreateKyvernoPolicyTemplateDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /api/v2/policytemplate][%d] createKyvernoPolicyTemplate default %s", o._statusCode, payload)
}

func (o *CreateKyvernoPolicyTemplateDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateKyvernoPolicyTemplateDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"k8c.io/dashboard/v2/pkg/test/e2e/utils/apiclient/models"
)

// GetAddonConfigReader is a Reader for the GetAddonConfig structure.
type GetAddonConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAddonConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAddonConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAddonConfigUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetAddonConfigDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetAddonConfigOK creates a GetAddonConfigOK with default headers values
func NewGetAddonConfigOK() *GetAddonConfigOK {
	return &GetAddonConfigOK{}
}

/*
GetAddonConfigOK describes a response with status code 200, with default header values.

AddonConfig
*/
type GetAddonConfigOK struct {
	Payload *models.AddonConfig
}

// IsSuccess returns true when this get addon config o k response has a 2xx status code
func (o *GetAddonConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get addon config o k response has a 3xx status code
func (o *GetAddonConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get addon config o k response has a 4xx status code
func (o *GetAddonConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get addon config o k response has a 5xx status code
func (o *GetAddonConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get addon config o k response a status code equal to that given
func (o *GetAddonConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get addon config o k response
func (o *GetAddonConfigOK) Code() int {
	return 200
}

func (o *GetAddonConfigOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/addonconfigs/{addon_id}][%d] getAddonConfigOK %s", 200, payload)
}

func (o *GetAddonConfigOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/addonconfigs/{addon_id}][%d] getAddonConfigOK %s", 200, payload)
}

func (o *GetAddonConfigOK) GetPayload() *models.AddonConfig {
	return o.Payload
}

func (o *GetAddonConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AddonConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAddonConfigUnauthorized creates a GetAddonConfigUnauthorized with default headers values
func NewGetAddonConfigUnauthorized() *GetAddonConfigUnauthorized {
	return &GetAddonConfigUnauthorized{}
}

/*
GetAddonConfigUnauthorized describes a response with status code 401, with default header values.

EmptyResponse is a empty response
*/
type GetAddonConfigUnauthorized struct {
}

// IsSuccess returns true when this get addon config unauthorized response has a 2xx status code
func (o *GetAddonConfigUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get addon config unauthorized response has a 3xx status code
func (o *GetAddonConfigUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get addon config unauthorized response has a 4xx status code
func (o *GetAddonConfigUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get addon config unauthorized response has a 5xx status code
func (o *GetAddonConfigUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get addon config unauthorized response a status code equal to that given
func (o *GetAddonConfigUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get addon config unauthorized response
func (o *GetAddonConfigUnauthorized) Code() int {
	return 401
}

func (o *GetAddonConfigUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/addonconfigs/{addon_id}][%d] getAddonConfigUnauthorized", 401)
}

func (o *GetAddonConfigUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v1/addonconfigs/{addon_id}][%d] getAddonConfigUnauthorized", 401)
}

func (o *GetAddonConfigUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAddonConfigDefault creates a GetAddonConfigDefault with default headers values
func NewGetAddonConfigDefault(code int) *GetAddonConfigDefault {
	return &GetAddonConfigDefault{
		_statusCode: code,
	}
}

/*
GetAddonConfigDefault describes a response with status code -1, with default header values.

errorResponse
*/
type GetAddonConfigDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get addon config default response has a 2xx status code
func (o *GetAddonConfigDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get addon config default response has a 3xx status code
func (o *GetAddonConfigDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get addon config default response has a 4xx status code
func (o *GetAddonConfigDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get addon config default response has a 5xx status code
func (o *GetAddonConfigDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get addon config default response a status code equal to that given
func (o *GetAddonConfigDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get addon config default response
func (o *GetAddonConfigDefault) Code() int {
	return o._statusCode
}

func (o *GetAddonConfigDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/addonconfigs/{addon_id}][%d] getAddonConfig default %s", o._statusCode, payload)
}

func (o *GetAddonConfigDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v1/addonconfigs/{addon_id}][%d] getAddonConfig default %s", o._statusCode, payload)
}

func (o *GetAddonConfigDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetAddonConfigDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GlobalContextEntryReference global context entry reference
//
// swagger:model GlobalContextEntryReference
type GlobalContextEntryReference struct {

	// JMESPath is an optional JSON Match Expression that can be used to
	// transform the JSON response returned from the server. For example
	// a JMESPath of "items | length(@)" applied to the API server response
	// for the URLPath "/apis/apps/v1/deployments" will return the total count
	// of deployments across all namespaces.
	// +kubebuilder:validation:Optional
	JMESPath string `json:"jmesPath,omitempty"`

	// Name of the global context entry
	// +kubebuilder:validation:Required
	Name string `json:"name,omitempty"`
}

// Validate validates this global context entry reference
func (m *GlobalContextEntryReference) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this global context entry reference based on context it is used
func (m *GlobalContextEntryReference) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GlobalContextEntryReference) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GlobalContextEntryReference) UnmarshalBinary(b []byte) error {
	var res GlobalContextEntryReference
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
